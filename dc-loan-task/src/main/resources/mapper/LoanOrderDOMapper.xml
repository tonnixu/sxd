<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jhh.dc.loan.dao.LoanOrderDOMapper" >
  <resultMap id="BaseResultMap" type="com.jhh.dc.loan.model.LoanOrderDO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="guid" property="guid" jdbcType="VARCHAR" />
    <result column="p_id" property="pId" jdbcType="INTEGER" />
    <result column="borr_num" property="borrNum" jdbcType="VARCHAR" />
    <result column="serial_no" property="serialNo" jdbcType="VARCHAR" />
    <result column="company_id" property="companyId" jdbcType="INTEGER" />
    <result column="per_id" property="perId" jdbcType="INTEGER" />
    <result column="bank_id" property="bankId" jdbcType="INTEGER" />
    <result column="contract_id" property="contractId" jdbcType="INTEGER" />
    <result column="opt_amount" property="optAmount" jdbcType="DECIMAL" />
    <result column="act_amount" property="actAmount" jdbcType="DECIMAL" />
    <result column="rl_date" property="rlDate" jdbcType="TIMESTAMP" />
    <result column="rl_remark" property="rlRemark" jdbcType="VARCHAR" />
    <result column="rl_state" property="rlState" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="creation_date" property="creationDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="sync" property="sync" jdbcType="CHAR" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="collection_user" property="collectionUser" jdbcType="VARCHAR" />
    <result column="deductions_type" property="deductionsType" jdbcType="INTEGER" />
    <result column="version" property="version" jdbcType="INTEGER" />
    <result column="sid" property="sid" jdbcType="VARCHAR" />
    <result column="pay_channel" property="payChannel" jdbcType="INTEGER" />
    <result column="trigger_style" property="triggerStyle" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, guid, p_id, borr_num, serial_no, company_id, per_id, bank_id, contract_id, opt_amount, 
    act_amount, rl_date, rl_remark, rl_state, type, reason, status, creation_date, update_date, 
    sync, create_user, collection_user, deductions_type, version, sid, pay_channel, trigger_style
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jhh.dc.loan.model.LoanOrderDOExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from b_loan_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from b_loan_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from b_loan_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jhh.dc.loan.model.LoanOrderDOExample" >
    delete from b_loan_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jhh.dc.loan.model.LoanOrderDO" >
    insert into b_loan_order (id, guid, p_id,
      borr_num, serial_no, company_id,
      per_id, bank_id, contract_id,
      opt_amount, act_amount, rl_date,
      rl_remark, rl_state, type,
      reason, status, creation_date,
      update_date, sync, create_user,
      collection_user, deductions_type, version,
      sid, pay_channel, trigger_style
      )
    values (#{id,jdbcType=INTEGER}, #{guid,jdbcType=VARCHAR}, #{pId,jdbcType=INTEGER},
      #{borrNum,jdbcType=VARCHAR}, #{serialNo,jdbcType=VARCHAR}, #{companyId,jdbcType=INTEGER},
      #{perId,jdbcType=INTEGER}, #{bankId,jdbcType=INTEGER}, #{contractId,jdbcType=INTEGER},
      #{optAmount,jdbcType=DECIMAL}, #{actAmount,jdbcType=DECIMAL}, #{rlDate,jdbcType=TIMESTAMP},
      #{rlRemark,jdbcType=VARCHAR}, #{rlState,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR},
      #{reason,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}, #{creationDate,jdbcType=TIMESTAMP},
      #{updateDate,jdbcType=TIMESTAMP}, #{sync,jdbcType=CHAR}, #{createUser,jdbcType=VARCHAR},
      #{collectionUser,jdbcType=VARCHAR}, #{deductionsType,jdbcType=INTEGER}, #{version,jdbcType=INTEGER},
      #{sid,jdbcType=VARCHAR}, #{payChannel,jdbcType=INTEGER}, #{triggerStyle,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jhh.dc.loan.model.LoanOrderDO" >
    insert into b_loan_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="guid != null" >
        guid,
      </if>
      <if test="pId != null" >
        p_id,
      </if>
      <if test="borrNum != null" >
        borr_num,
      </if>
      <if test="serialNo != null" >
        serial_no,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="perId != null" >
        per_id,
      </if>
      <if test="bankId != null" >
        bank_id,
      </if>
      <if test="contractId != null" >
        contract_id,
      </if>
      <if test="optAmount != null" >
        opt_amount,
      </if>
      <if test="actAmount != null" >
        act_amount,
      </if>
      <if test="rlDate != null" >
        rl_date,
      </if>
      <if test="rlRemark != null" >
        rl_remark,
      </if>
      <if test="rlState != null" >
        rl_state,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="creationDate != null" >
        creation_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="sync != null" >
        sync,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="collectionUser != null" >
        collection_user,
      </if>
      <if test="deductionsType != null" >
        deductions_type,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="sid != null" >
        sid,
      </if>
      <if test="payChannel != null" >
        pay_channel,
      </if>
      <if test="triggerStyle != null" >
        trigger_style,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="guid != null" >
        #{guid,jdbcType=VARCHAR},
      </if>
      <if test="pId != null" >
        #{pId,jdbcType=INTEGER},
      </if>
      <if test="borrNum != null" >
        #{borrNum,jdbcType=VARCHAR},
      </if>
      <if test="serialNo != null" >
        #{serialNo,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="perId != null" >
        #{perId,jdbcType=INTEGER},
      </if>
      <if test="bankId != null" >
        #{bankId,jdbcType=INTEGER},
      </if>
      <if test="contractId != null" >
        #{contractId,jdbcType=INTEGER},
      </if>
      <if test="optAmount != null" >
        #{optAmount,jdbcType=DECIMAL},
      </if>
      <if test="actAmount != null" >
        #{actAmount,jdbcType=DECIMAL},
      </if>
      <if test="rlDate != null" >
        #{rlDate,jdbcType=TIMESTAMP},
      </if>
      <if test="rlRemark != null" >
        #{rlRemark,jdbcType=VARCHAR},
      </if>
      <if test="rlState != null" >
        #{rlState,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="creationDate != null" >
        #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sync != null" >
        #{sync,jdbcType=CHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="collectionUser != null" >
        #{collectionUser,jdbcType=VARCHAR},
      </if>
      <if test="deductionsType != null" >
        #{deductionsType,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
      <if test="sid != null" >
        #{sid,jdbcType=VARCHAR},
      </if>
      <if test="payChannel != null" >
        #{payChannel,jdbcType=INTEGER},
      </if>
      <if test="triggerStyle != null" >
        #{triggerStyle,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jhh.dc.loan.model.LoanOrderDOExample" resultType="java.lang.Integer" >
    select count(*) from b_loan_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update b_loan_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.guid != null" >
        guid = #{record.guid,jdbcType=VARCHAR},
      </if>
      <if test="record.pId != null" >
        p_id = #{record.pId,jdbcType=INTEGER},
      </if>
      <if test="record.borrNum != null" >
        borr_num = #{record.borrNum,jdbcType=VARCHAR},
      </if>
      <if test="record.serialNo != null" >
        serial_no = #{record.serialNo,jdbcType=VARCHAR},
      </if>
      <if test="record.companyId != null" >
        company_id = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.perId != null" >
        per_id = #{record.perId,jdbcType=INTEGER},
      </if>
      <if test="record.bankId != null" >
        bank_id = #{record.bankId,jdbcType=INTEGER},
      </if>
      <if test="record.contractId != null" >
        contract_id = #{record.contractId,jdbcType=INTEGER},
      </if>
      <if test="record.optAmount != null" >
        opt_amount = #{record.optAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.actAmount != null" >
        act_amount = #{record.actAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.rlDate != null" >
        rl_date = #{record.rlDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rlRemark != null" >
        rl_remark = #{record.rlRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.rlState != null" >
        rl_state = #{record.rlState,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.reason != null" >
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.creationDate != null" >
        creation_date = #{record.creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sync != null" >
        sync = #{record.sync,jdbcType=CHAR},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.collectionUser != null" >
        collection_user = #{record.collectionUser,jdbcType=VARCHAR},
      </if>
      <if test="record.deductionsType != null" >
        deductions_type = #{record.deductionsType,jdbcType=INTEGER},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.sid != null" >
        sid = #{record.sid,jdbcType=VARCHAR},
      </if>
      <if test="record.payChannel != null" >
        pay_channel = #{record.payChannel,jdbcType=INTEGER},
      </if>
      <if test="record.triggerStyle != null" >
        trigger_style = #{record.triggerStyle,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update b_loan_order
    set id = #{record.id,jdbcType=INTEGER},
      guid = #{record.guid,jdbcType=VARCHAR},
      p_id = #{record.pId,jdbcType=INTEGER},
      borr_num = #{record.borrNum,jdbcType=VARCHAR},
      serial_no = #{record.serialNo,jdbcType=VARCHAR},
      company_id = #{record.companyId,jdbcType=INTEGER},
      per_id = #{record.perId,jdbcType=INTEGER},
      bank_id = #{record.bankId,jdbcType=INTEGER},
      contract_id = #{record.contractId,jdbcType=INTEGER},
      opt_amount = #{record.optAmount,jdbcType=DECIMAL},
      act_amount = #{record.actAmount,jdbcType=DECIMAL},
      rl_date = #{record.rlDate,jdbcType=TIMESTAMP},
      rl_remark = #{record.rlRemark,jdbcType=VARCHAR},
      rl_state = #{record.rlState,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      reason = #{record.reason,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=CHAR},
      creation_date = #{record.creationDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      sync = #{record.sync,jdbcType=CHAR},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      collection_user = #{record.collectionUser,jdbcType=VARCHAR},
      deductions_type = #{record.deductionsType,jdbcType=INTEGER},
      version = #{record.version,jdbcType=INTEGER},
      sid = #{record.sid,jdbcType=VARCHAR},
      pay_channel = #{record.payChannel,jdbcType=INTEGER},
      trigger_style = #{record.triggerStyle,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jhh.dc.loan.model.LoanOrderDO" >
    update b_loan_order
    <set >
      <if test="guid != null" >
        guid = #{guid,jdbcType=VARCHAR},
      </if>
      <if test="pId != null" >
        p_id = #{pId,jdbcType=INTEGER},
      </if>
      <if test="borrNum != null" >
        borr_num = #{borrNum,jdbcType=VARCHAR},
      </if>
      <if test="serialNo != null" >
        serial_no = #{serialNo,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=INTEGER},
      </if>
      <if test="perId != null" >
        per_id = #{perId,jdbcType=INTEGER},
      </if>
      <if test="bankId != null" >
        bank_id = #{bankId,jdbcType=INTEGER},
      </if>
      <if test="contractId != null" >
        contract_id = #{contractId,jdbcType=INTEGER},
      </if>
      <if test="optAmount != null" >
        opt_amount = #{optAmount,jdbcType=DECIMAL},
      </if>
      <if test="actAmount != null" >
        act_amount = #{actAmount,jdbcType=DECIMAL},
      </if>
      <if test="rlDate != null" >
        rl_date = #{rlDate,jdbcType=TIMESTAMP},
      </if>
      <if test="rlRemark != null" >
        rl_remark = #{rlRemark,jdbcType=VARCHAR},
      </if>
      <if test="rlState != null" >
        rl_state = #{rlState,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="creationDate != null" >
        creation_date = #{creationDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="sync != null" >
        sync = #{sync,jdbcType=CHAR},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="collectionUser != null" >
        collection_user = #{collectionUser,jdbcType=VARCHAR},
      </if>
      <if test="deductionsType != null" >
        deductions_type = #{deductionsType,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="sid != null" >
        sid = #{sid,jdbcType=VARCHAR},
      </if>
      <if test="payChannel != null" >
        pay_channel = #{payChannel,jdbcType=INTEGER},
      </if>
      <if test="triggerStyle != null" >
        trigger_style = #{triggerStyle,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jhh.dc.loan.model.LoanOrderDO" >
    update b_loan_order
    set guid = #{guid,jdbcType=VARCHAR},
      p_id = #{pId,jdbcType=INTEGER},
      borr_num = #{borrNum,jdbcType=VARCHAR},
      serial_no = #{serialNo,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=INTEGER},
      per_id = #{perId,jdbcType=INTEGER},
      bank_id = #{bankId,jdbcType=INTEGER},
      contract_id = #{contractId,jdbcType=INTEGER},
      opt_amount = #{optAmount,jdbcType=DECIMAL},
      act_amount = #{actAmount,jdbcType=DECIMAL},
      rl_date = #{rlDate,jdbcType=TIMESTAMP},
      rl_remark = #{rlRemark,jdbcType=VARCHAR},
      rl_state = #{rlState,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      reason = #{reason,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR},
      creation_date = #{creationDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      sync = #{sync,jdbcType=CHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      collection_user = #{collectionUser,jdbcType=VARCHAR},
      deductions_type = #{deductionsType,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      sid = #{sid,jdbcType=VARCHAR},
      pay_channel = #{payChannel,jdbcType=INTEGER},
      trigger_style = #{triggerStyle,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="selectOverDueOrderStatus" resultType="com.jhh.dc.loan.entity.loan.BorrowDeductions">
        select
        t.contract_id borrId,
        t.per_id perId,
        if(b.status = 1 &amp;&amp; b.bank_id = 2,3,if(t.rl_state='s',1,2)) status,
        ifnull(t.reason,t.rl_remark) reason
        from b_loan_order t inner join (
        select t.contract_id,
        max(t.id) order_id from b_loan_order t
        left join b_borrow_list b on t.contract_id = b.id
        where b.borr_status = 'BS005' and t.type in (2,4,5,8,9,10,12,13,14,16,17,18) and t.rl_state != 'p'
        and t.creation_date &gt; DATE_SUB(CURDATE(),INTERVAL 1 DAY)
        group by t.contract_id) c
        on t.id = c.order_id
        left join b_bank b on b.id = t.bank_id
    </select>

    <select id="selectBankCardError" resultType="com.jhh.dc.loan.entity.loan.BorrowDeductions">
        select
        t.contract_id borrId,
        t.per_id perId,
        3 status,
        ifnull(t.reason,t.rl_remark) reason
        from b_loan_order t inner join (
        select t.contract_id,
        max(t.id) order_id from b_loan_order t
        left join b_borrow_list b on t.contract_id = b.id
        where b.borr_status = 'BS005' and t.creation_date &gt; DATE_SUB(CURDATE(),INTERVAL 1 DAY)
        group by t.contract_id) c
        on t.id = c.order_id
        left join b_bank b on b.id = t.bank_id where b.status = 1 and b.bank_id = 2
    </select>

  <select id="selectOrderByDeduct" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    FROM
    b_loan_order
    where type in ('4','5','8','12','13','14','16','17') and creation_date &lt; date_sub(now(), interval 3 minute)
    and rl_state = 'p'
  </select>

  <select id="selectOrderByBatchDeduct" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    FROM
    b_loan_order
    where
    type = '18' and creation_date &lt; date_sub(now(), interval 3 minute) and rl_state = 'p'
  </select>

  <select id="getMultiplePayByBorrowList" resultType="java.util.LinkedHashMap">
    SELECT
        t.borr_num as '合同单号', t1.name as '姓名', t1.phone as '手机号', count(1) as '放款次数'
    FROM
        b_loan_order t
    Left JOIN b_person t1
    on t.per_id = t1.id
    WHERE
        t.borr_num IN (
            SELECT
                t.borr_num
            FROM
                b_loan_order t
            WHERE
                t.creation_date > CURDATE()
            AND t.rl_state = 's' and t.type = '15'
        )
    AND t.rl_state = 's' and t.type = '15'
    GROUP BY
        borr_num
    HAVING
        COUNT(1) > 1
  </select>

</mapper>