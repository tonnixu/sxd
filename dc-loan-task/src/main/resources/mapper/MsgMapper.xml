<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jhh.dc.loan.dao.MsgMapper" >
  <resultMap id="BaseResultMap" type="com.jhh.dc.loan.model.Msg" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="per_id" property="perId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="sync" property="sync" jdbcType="CHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.jhh.dc.loan.model.Msg" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, title, per_id, type, status, create_time, sync
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from b_msg
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from b_msg
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jhh.dc.loan.model.Msg" >
    insert into b_msg (id, title, per_id,
      type, status, create_time, 
      sync, content)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{perId,jdbcType=INTEGER}, 
      #{type,jdbcType=INTEGER}, #{status,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{sync,jdbcType=CHAR}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jhh.dc.loan.model.Msg" >
    insert into b_msg
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="perId != null" >
        per_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="sync != null" >
        sync,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="perId != null" >
        #{perId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sync != null" >
        #{sync,jdbcType=CHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jhh.dc.loan.model.Msg" >
    update b_msg
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="perId != null" >
        per_id = #{perId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sync != null" >
        sync = #{sync,jdbcType=CHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jhh.dc.loan.model.Msg" >
    update b_msg
    set title = #{title,jdbcType=VARCHAR},
      per_id = #{perId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      status = #{status,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      sync = #{sync,jdbcType=CHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jhh.dc.loan.model.Msg" >
    update b_msg
    set title = #{title,jdbcType=VARCHAR},
      per_id = #{perId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      status = #{status,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      sync = #{sync,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="getMessageByUserId" resultType="com.jhh.dc.loan.model.Msg">
  	SELECT id,title,per_id AS perId,TYPE,content,STATUS,create_time FROM b_msg
  	WHERE per_id = #{param1} ORDER BY create_time DESC limit #{param2},#{2}
  </select>
  <select id="selectUnread" parameterType="java.lang.String" resultType="java.lang.Integer">
  	select count(*) 
  	FROM b_msg
 	WHERE per_id=#{param1}
 	AND status = 'n'
  </select>
  <update id="updateMessageStatus" parameterType="java.lang.String">
  	UPDATE b_msg SET STATUS = 'y' WHERE id = #{msgId}
  </update>
</mapper>